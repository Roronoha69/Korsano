{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/mbodj/Downloads/treact-ui/src/stripe/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { element } from 'prop-types';\nimport { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(\"Token généré: \", paymentMethod); // envoie du token a back\n\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:8080/stripe\", {\n          amount: 100,\n          id: id\n        });\n\n        if (response.data.success) {\n          console.log(\"Payment réussi\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stripe-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxWidth: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          hidePostalCode: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"payer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","CardElement","useStripe","useElements","axios","element","css","CheckoutForm","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","id","response","post","amount","data","success","message","maxWidth","hidePostalCode"],"sources":["/mnt/c/Users/mbodj/Downloads/treact-ui/src/stripe/CheckoutForm.js"],"sourcesContent":["import React from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\nimport { element } from 'prop-types';\r\nimport { css } from 'styled-components';\r\n \r\n\r\nconst CheckoutForm = () => {\r\n\r\n    const stripe= useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit =async(event)=>{\r\n      event.preventDefault();\r\n        const {error, paymentMethod } = await stripe.createPaymentMethod({\r\n            type:'card',\r\n            card: elements.getElement(CardElement),\r\n        });\r\n        if(!error){\r\n            console.log(\"Token généré: \", paymentMethod)\r\n            // envoie du token a back\r\n            try {\r\n                const {id} = paymentMethod;\r\n                const response = await axios.post(\"http://localhost:8080/stripe\",\r\n                {\r\n                    amount: 100,\r\n                    id: id,\r\n                });\r\n                if(response.data.success){\r\n                    console.log(\"Payment réussi\");\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className='stripe-wrap'>\r\n    <form onSubmit={handleSubmit} style={{maxWidth:400}}>\r\n        <CardElement \r\n        options={{\r\n            hidePostalCode: true\r\n        }}\r\n        />\r\n    \r\n\r\n        <button>\r\n            payer\r\n        </button>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckoutForm"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,GAAT,QAAoB,mBAApB;;;AAGA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAMC,MAAM,GAAEN,SAAS,EAAvB;EACA,MAAMO,QAAQ,GAAGN,WAAW,EAA5B;;EAEA,MAAMO,YAAY,GAAE,MAAMC,KAAN,IAAc;IAChCA,KAAK,CAACC,cAAN;IACE,MAAM;MAACC,KAAD;MAAQC;IAAR,IAA0B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;MAC7DC,IAAI,EAAC,MADwD;MAE7DC,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBjB,WAApB;IAFuD,CAA3B,CAAtC;;IAIA,IAAG,CAACY,KAAJ,EAAU;MACNM,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,aAA9B,EADM,CAEN;;MACA,IAAI;QACA,MAAM;UAACO;QAAD,IAAOP,aAAb;QACA,MAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,8BAAX,EACvB;UACIC,MAAM,EAAE,GADZ;UAEIH,EAAE,EAAEA;QAFR,CADuB,CAAvB;;QAKA,IAAGC,QAAQ,CAACG,IAAT,CAAcC,OAAjB,EAAyB;UACrBP,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACH;MACJ,CAVD,CAUE,OAAOP,KAAP,EAAc;QACZM,OAAO,CAACC,GAAR,CAAYP,KAAZ;MACH;IACJ,CAhBD,MAiBI;MACAM,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACc,OAAlB;IACH;EACJ,CA1BD;;EA4BF,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,uBACA;MAAM,QAAQ,EAAEjB,YAAhB;MAA8B,KAAK,EAAE;QAACkB,QAAQ,EAAC;MAAV,CAArC;MAAA,wBACI,QAAC,WAAD;QACA,OAAO,EAAE;UACLC,cAAc,EAAE;QADX;MADT;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAjDD;;GAAMtB,Y;UAEYL,S,EACGC,W;;;KAHfI,Y;AAmDN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}