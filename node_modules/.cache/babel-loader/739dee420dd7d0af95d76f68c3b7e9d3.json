{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\n\nvar utils = require('../utils');\n\nvar oAuthHost = 'connect.stripe.com';\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n  authorizeUrl: function authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n    var path = 'oauth/authorize'; // For Express accounts, the path changes\n\n    if (options.express) {\n      path = \"express/\".concat(path);\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return \"https://\".concat(oAuthHost, \"/\").concat(path, \"?\").concat(utils.stringifyRequestData(params));\n  },\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost\n  }),\n  deauthorize: function deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost\n    }).apply(this, arguments);\n  }\n});","map":{"version":3,"names":["StripeResource","require","stripeMethod","method","utils","oAuthHost","module","exports","extend","basePath","authorizeUrl","params","options","path","express","response_type","client_id","_stripe","getClientId","scope","stringifyRequestData","token","host","deauthorize","spec","apply","arguments"],"sources":["/mnt/c/Users/mbodj/Downloads/treact-ui/node_modules/stripe/lib/resources/OAuth.js"],"sourcesContent":["'use strict';\n\nconst StripeResource = require('../StripeResource');\nconst stripeMethod = StripeResource.method;\nconst utils = require('../utils');\n\nconst oAuthHost = 'connect.stripe.com';\n\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n\n  authorizeUrl(params, options) {\n    params = params || {};\n    options = options || {};\n\n    let path = 'oauth/authorize';\n\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = `express/${path}`;\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return `https://${oAuthHost}/${path}?${utils.stringifyRequestData(params)}`;\n  },\n\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost,\n  }),\n\n  deauthorize(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost,\n    }).apply(this, arguments);\n  },\n});\n"],"mappings":"AAAA;;AAEA,IAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAMC,YAAY,GAAGF,cAAc,CAACG,MAApC;;AACA,IAAMC,KAAK,GAAGH,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAMI,SAAS,GAAG,oBAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBP,cAAc,CAACQ,MAAf,CAAsB;EACrCC,QAAQ,EAAE,GAD2B;EAGrCC,YAHqC,wBAGxBC,MAHwB,EAGhBC,OAHgB,EAGP;IAC5BD,MAAM,GAAGA,MAAM,IAAI,EAAnB;IACAC,OAAO,GAAGA,OAAO,IAAI,EAArB;IAEA,IAAIC,IAAI,GAAG,iBAAX,CAJ4B,CAM5B;;IACA,IAAID,OAAO,CAACE,OAAZ,EAAqB;MACnBD,IAAI,qBAAcA,IAAd,CAAJ;IACD;;IAED,IAAI,CAACF,MAAM,CAACI,aAAZ,EAA2B;MACzBJ,MAAM,CAACI,aAAP,GAAuB,MAAvB;IACD;;IAED,IAAI,CAACJ,MAAM,CAACK,SAAZ,EAAuB;MACrBL,MAAM,CAACK,SAAP,GAAmB,KAAKC,OAAL,CAAaC,WAAb,EAAnB;IACD;;IAED,IAAI,CAACP,MAAM,CAACQ,KAAZ,EAAmB;MACjBR,MAAM,CAACQ,KAAP,GAAe,YAAf;IACD;;IAED,yBAAkBd,SAAlB,cAA+BQ,IAA/B,cAAuCT,KAAK,CAACgB,oBAAN,CAA2BT,MAA3B,CAAvC;EACD,CA3BoC;EA6BrCU,KAAK,EAAEnB,YAAY,CAAC;IAClBC,MAAM,EAAE,MADU;IAElBU,IAAI,EAAE,aAFY;IAGlBS,IAAI,EAAEjB;EAHY,CAAD,CA7BkB;EAmCrCkB,WAnCqC,uBAmCzBC,IAnCyB,EAmCnB;IAChB,IAAI,CAACA,IAAI,CAACR,SAAV,EAAqB;MACnBQ,IAAI,CAACR,SAAL,GAAiB,KAAKC,OAAL,CAAaC,WAAb,EAAjB;IACD;;IAED,OAAOhB,YAAY,CAAC;MAClBC,MAAM,EAAE,MADU;MAElBU,IAAI,EAAE,mBAFY;MAGlBS,IAAI,EAAEjB;IAHY,CAAD,CAAZ,CAIJoB,KAJI,CAIE,IAJF,EAIQC,SAJR,CAAP;EAKD;AA7CoC,CAAtB,CAAjB"},"metadata":{},"sourceType":"script"}